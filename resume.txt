Belajar Javascript Dasar.

1. Program Hello World
    untuk membuat program javascript bisa dengan menambahkan tag <script> </script> secara langsung didalam file html dan menuliskan script yang ingin dibuat. / dengan membuat file dengan extension '.js', lalu menyertakanya di attribute 'src' pada tag script.

2. Komentar
    Komentar adalah baris kode yang tidak akan di eksekusi oleh program. dalam javascript kita bisa membuat komentar menggunakan double slash (//) jika ingin memberi komentar pada satu baris. contoh : 

    // ini adalah komentar

    atau dengan tanda slash dan bintang (/* */) untuk membuat komentar lebih dari satu baris. contoh : 

    /*
    * ini adalah komentar
    * lebih dari satu baris
    */

3. Tipe Data Number
    Dalam javascript hanya ada satu tipe data untuk angka yaitu 'number' baik untuk bilangan bulat / bilangan desimal. untuk menuliskan bilangan bulat bisa dengan cara dituliskan langsung. contoh :

    <script>
        document.writeln(100);  // output : 100
    </script>

    sedangkan untuk bilangan decimal kita bisa menggunakan tanda titik (.) sebagai pengganti koma. contoh : 

    <script>
        document.writeln(100.44);   // output : 100,44
    </script>

    selain itu dalam javascript juga mendukung berbagai macam number notation, tapi defaultnya menggunakan basis 10. selain itu javascript juga mendukung binary, hexadecimal dan octal. 
    untuk hexadecimal biasanya diawali dengan '0x'. contoh : 0xFF
    untuk binary biasanya diawali dengan '0b'. contoh : 0b10101
    untuk octal bisanya diawali dengan '0o'. contoh : 0o10

4. Tipe Data Boolean
    Tipe data boolean adalah tipe data yang berisikan kebenaran. tipe data ini hanya memiliki 2 nilai yaitu benar / salah.
    nilai benar direpresentasikan dengan 'true'. sedangkan salah direpresentasikan dengan 'false'.
    walaupun tipe data ini terlihat sederhana, tapi nantinya ini akan sangat banyak digunakan dalam pemrograman. contoh:

    <script>
        document.writeln(true);
        document.writeln("</br>");
        document.writeln(false);
    </script>

5. Tipe Data String
    Tipe data string atau text adalah tipe data yang berisikan kosong / lebih karakter. 
    Tipe data string harus diawali dan diakhiri dengan tanda petik satu (') atau tanda petik dua("). 
    Jika ingin menggabungkan 2 atau lebih tipe data string, bisa dengan cara menggunakan tanda plus (+). contoh :

    <script>
        document.writeln("Hai saya string");
        document.writeln("</br>");
        document.writeln('Saya adalah tipe data' + 'yang berisikan kosong / lebih karakter');
    </script>

6. Escape Sequence
    Escape Sequence adalah karakter khusus yang ada dalam string seperti enter (\n), tab (\t), slash(\\), petik satu (\'), petik dua (\"). contoh : 

    <script>
        document.writeln("<textarea cols='100' rows='10'>");
        document.write("Escape\nSequence\n");
        document.write("\tadalah karakter khusus dalam string, seperti enter(\\\n), tab(\\\t), slash(\\\\), tanda petik satu(\\\') dan petik dua(\\\").");
        document.writeln("</textarea>");
    </script>

7. Variabel
    Variabel digunakan untuk menyimpan data. 
    Dengan menggunakan variabel kita bisa menggunakan ulang data dengan cara menyebutkan nama variabelnya.
    Cara membuat variabel adalah dengan menuliskan 'var' kemudian diikuti dengan nama variablenya. contoh : 

    <scrip>
        var fullName;
        var firstName;
        var lastName;
        var title;
    </scrip>

    Javascript adalah dynamic langaunge yang artinya variable dalam javascript tidak harus terpaku kepada satu tipe data tertentu, kita bisa mengubah tipe data pada satu variabel yang sama.
    Setelah variabel di deklarasikan kita bisa mengubah nilai / value dari variabel tersebut, caranya dengan menuliskan nama variabel, lalu sama dengan (=) dan terakhir tentukan nilainya. contoh :

    <scrip>
        var fullName;
        var firstName;
        var lastName;
        var title;

        fullName = "Irfan Machmud";
        firstName = "Irfan";
        lastName = "Machmud";
        title = "S.Kom,";

    </scrip>

    Kita juga bisa memberikan nilai secara langsung ke variabel disaat melakukan deklarasi variabel.

        <scrip>

            var fullName = "Irfan Machmud";
            var firstName = "Irfan";
            var lastName = "Machmud";
            var title = "S.Kom,";

        </scrip>

    Sebelum tahun 2015 untuk membuat variabel hanya menggunakan kata kunci 'var'. tapi sejak 2015, sejak diperkenalkan ECMASCRIPT diperkenalkan kata kunci baru untuk membuat variabel yaitu 'let' dan 'const'.
    Sejak 2015 kata kunci var sudah tidak direkomendasikan lagi untuk pembuatan variabel, dikarenakan ada masalah dari desain awal 'var'. contoh : 

        <script>
        let fullName = "Irfan Machmud S.Kom,";
        let firstName = "Irfan";
        let lastName = "Machmud";
        let title = "S.Kom,";
        </script>

    Variabel yang di deklarasikan menggunakan kata kunci var, dan let itu nilainya masih bisa diubah. Kata kunci 'let' digunakan untuk menggantikan kata kunci 'var'.
    Berbeda dengan variabel yang di deklarasikan menggunakan kata kunci 'const'. Variabel yang dideklarasikan menggunakan kata kunci 'const' setelah ditentukan nilainya, maka sudah tidak dapat diubah.
    Data ini biasanya disebut dengan constant. contoh :

        <script>
            const app = "Hello App";

            app = "New Hello App";  // error
        </script>

8. Operator Matematika 
    Javascript mendukung banyak operasi matematika untuk tipe data number, seperti : Aritmatika, Augmented Assignments, Unary dll.
    Terdapat banyak operator Aritmatika diantaranya : 
        +   : penjumlahan
        -   : pengurangan 
        *   : perkalian
        **  : exponensial (pangkat)
        /   : pembagian
        %   : sisa bagi 
    Contoh : 

        <script>
            let result = 1 + 2;
            document.writeln("<p>1 + 2 = " + result + "</p>");
            let originalResult = $result;

            let result = originalResult - 1;
            document.writeln("<p>" + originalResult + " - 1 = " + result + "</p>");
            let originalResult = result;

            let result = originalResult * 3;
            document.writeln("<p>" + originalResult + " x 3 = " + result + "</p>");
            let originalResult = result;

            let result = originalResult / 2;
            document.writeln("<p>" + originalResult + " : 2 = " + result + "</p>");
            let originalResult = result;

            let result = originalResult ** 2;
            document.writeln("<p>" + originalResult + " ** 2 = " + result + "</p>");
            let originalResult = result;

            let result = originalResult % 2;
            document.writeln("<p>" + originalResult + " % 2 = " + result + "</p>");
        </script>

    Operator Augmented Assignments adalah ketika operator aritmatika dilakukan pada variabel itu sendiri. contoh :

    OPERATOR ARITMATIKA      | OPERATOR AUGMENTED ASSIGNMENTS 
    =========================================================
    result = result + 10     | result += 10
    result = result - 10     | result -= 10
    result = result * 10     | result *= 10
    result = result ** 10    | result **= 10
    result = result / 10     | result /= 10
    result = result % 10     | result %= 10

    Operator UNARY adalah operator yang hanya membutuhkan satu angka saja. 

    OPERATOR    | KETERANGAN
    ===========================================
    +           | Menunjukan bilangan positif
    -           | Menunjukan bilangan negatif
    ++          | Increment, Menaikan 1 angka
    --          | Decrement, Menurunkan 1 angka

9. Operator Perbandingan
    Operator perbandingan dilakukan untuk membandingkan 2 buah data.
    operasi dari operatori ini menghasilkan nilai boolean(kebenaran).
    jika hasilnya operasinya benar, berarti nilainya true.
    jika hasilnya operasinya salah, berarti nilainya false.

    OPERATOR        | KETERANGAN
    ===========================================
    >               | lebih dari
    <               | kurang dari
    >=              | lebih dari sama dengan
    <=              | kurang dari sama dengan
    ==              | sama dengan
    ===             | sama dengan dan sama tipe
    !=              | tidak sama dengan
    !==             | tidak sama dengan atau tidak sama tipe

10. Operator Logika
    Operator logika adalah operator untuk 2 data boolean.
    Hasil dari operator ini juga adalah data boolean.

    OPERATOR        | KETERANGAN
    ===========================================
    &&              | Dan
    ||              | Atau
    !               | Kebalikan

    Operator && (Dan).
    Nilai 1 | Operator  | Nilai 2   | Hasil
    =========================================
    true    | &&        | true      | true
    true    | &&        | false     | false
    false   | &&        | true      | false
    false   | &&        | false     | false

    Operator || (Atau).
    Nilai 1 | Operator  | Nilai 2   | Hasil
    =========================================
    true    | ||        | true      | true
    true    | ||        | false     | true
    false   | ||        | true      | true
    false   | ||        | false     | false

    Operator Unary ! (Kebalikan).
    Operator | Nilai 2   | Hasil
    ===============================
    !        | true      | false
    !        | false     | true

11. Console
    Javascript memiliki fitur untuk melakukan logging bernama Console.
    Loging adalah mekanisme yang bisa dilakukan programmer untuk menampilkan informasi dari aplikasi yang sedang berjalan, tanpa mengganggu alur kerja aplikasi dan interaksi user.
    Untuk melakukan logging menggunakan console, kita hanya perlu menggunakan perintah 'console'.
    Berikut macam macam Console method : 

    Console Method      | Keterangan 
    ===================================================
    console.info(..)    | Memberikan informasi 
    console.warn(..)    | Memberikan informasi peringatan
    console.error(..)   | Memberikan informasi error
    console.table(..)   | Memberikan informasi dalam bentuk table

12. String Template
    Didalam javascript terdapat sebuah fitur bernama 'String Template'.
    Dengan fitur ini memunkginkan kita untuk menstubtitusikan data dari luar string ke dalam string. seperti mengambil data dari variabel atau bahkan melakukan operasi aritmatika.
    Template string juga mendukung multiline.
    Untuk menggunakan fitu ini gunakan tanda backtik (`) bukan petik satu (') atau petik 2 (").
    Contoh : 


    <script>
        // mengambil data dari variabel : 
        const fullName = "Irfan Em";
        const template = `Nama lengkap : ${fullName}`;

        console.info(template);

        // melakukan operasi aritmatika
        const name = "Irfan eM";
        const nilai = 89;
        const template = `Nama : ${nama}, lulus : ${nilai > 70}`;
        
        console.info(template);

        // mendukung multiline
        const multiline = `Hai saya Irfan Machmud
ini adalah teks yang menggunakan string template
string template memungkinkan kita untuk menulis string secara multiline.
sangat hebat!`;

        document.writeln("<pre>"+ multiline +"</pre>")
    </script>